{
	"info": {
		"_postman_id": "cc14db1e-aff8-4037-bdfc-55674ac416eb",
		"name": "Homework-12",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Scenario",
			"item": [
				{
					"name": "Registration user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Run scenario\");\r",
									"pm.test(\"Registration status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Registration user with name user1 success\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registration user with name user1 success\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"user1\",\r\n    \"password\": \"password\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/registration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check auth user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User1 not authenticated\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User not authenticated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/insystem",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"insystem"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update not authorization user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authorization required for user1 update\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/user/name/user1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"name",
								"user1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get not authorization user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authorization required for user1 get\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/user/name/user1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"name",
								"user1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login user1 success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/login?username=user1&password=password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "user1"
								},
								{
									"key": "password",
									"value": "password"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check auth user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User1 authenticated\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User authenticated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/insystem",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"insystem"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update authorization  user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update user1 success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"user1FirstNameNew\",\r\n  \"lastName\": \"user1LastNameNew\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/user/name/user1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"name",
								"user1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get authorization user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get user1 success\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"user1\");\r",
									"    pm.expect(jsonData.firstName).to.eql(\"user1FirstNameNew\");\r",
									"    pm.expect(jsonData.lastName).to.eql(\"user1LastNameNew\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/user/name/user1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"name",
								"user1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logout user1\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    pm.expect(pm.response.text()).to.include(\"User not authenticated\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registration user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registration status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Registration user with name user2 success\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registration user with name user2 success\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"user2\",\r\n    \"password\": \"password\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/registration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login user2 success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/login?username=user2&password=password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "user2"
								},
								{
									"key": "password",
									"value": "password"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check auth user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User2 authenticated\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User authenticated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/insystem",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"insystem"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update user1\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/user/name/user1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"name",
								"user1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get user1\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/user/name/user1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"name",
								"user1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Clean",
			"item": [
				{
					"name": "Login user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Clean data\");\r",
									"pm.test(\"Login user1 success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/login?username=user2&password=password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "user2"
								},
								{
									"key": "password",
									"value": "password"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete user2 status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"User with name user2 deleted\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User with name user2 deleted\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/user/user2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"user2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logout user2\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    pm.expect(pm.response.text()).to.include(\"User not authenticated\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login user1 success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/login?username=user1&password=password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "user1"
								},
								{
									"key": "password",
									"value": "password"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete user1 status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"User with name user1 deleted\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User with name user1 deleted\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/user/user1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"user1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logout user1\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    pm.expect(pm.response.text()).to.include(\"User not authenticated\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}